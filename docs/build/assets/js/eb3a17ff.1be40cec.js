"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[7533],{3273:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=["components"],i={},u=void 0,d={unversionedId:"jsdoc/test",id:"jsdoc/test",isDocsHomePage:!1,title:"test",description:"Classes",source:"@site/docs/jsdoc/test.md",sourceDirName:"jsdoc",slug:"/jsdoc/test",permalink:"/docs/jsdoc/test",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/jsdoc/test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Translate your site",permalink:"/docs/tutorial-extras/translate-your-site"}},p=[{value:"Classes",id:"classes",children:[]},{value:"Members",id:"members",children:[]},{value:"Functions",id:"functions",children:[]},{value:"AudioEngine \u21d0 <code>ParentClass</code>",id:"audioengine--parentclass",children:[{value:"new AudioEngine()",id:"new-audioengine",children:[]}]},{value:"SoundPlayer \u21d0 <code>ParentClass</code>",id:"soundplayer--parentclass",children:[{value:"new SoundPlayer()",id:"new-soundplayer",children:[]}]},{value:"A4",id:"a4",children:[]},{value:"buildImpulse(options) \u21d2 <code>AudioBuffer</code>",id:"buildimpulseoptions--audiobuffer",children:[]},{value:"secondsToMilliseconds(seconds) \u21d2 <code>number</code>",id:"secondstomillisecondsseconds--number",children:[]},{value:"millisecondsToSeconds(milliseconds) \u21d2 <code>number</code>",id:"millisecondstosecondsmilliseconds--number",children:[]},{value:"equalPowerScale(percent)",id:"equalpowerscalepercent",children:[]},{value:"dbToGain()",id:"dbtogain",children:[]},{value:"gainToDb()",id:"gaintodb",children:[]},{value:"intervalToFrequencyRatio(interval)",id:"intervaltofrequencyratiointerval",children:[]},{value:"frequencyToMidiNote(frequency)",id:"frequencytomidinotefrequency",children:[]},{value:"frequencyToMidiNoteFloat()",id:"frequencytomidinotefloat",children:[]},{value:"midiToFrequency(midi) \u21d2",id:"miditofrequencymidi-",children:[]},{value:"clamp(value, min, max) \u21d2",id:"clampvalue-min-max-",children:[]},{value:"exchange(array, iIndex, jIndex) \u21d2 <code>Array.&lt;T&gt;</code>",id:"exchangearray-iindex-jindex--arrayt",children:[]},{value:"cloneArray(array) \u21d2 <code>Array.&lt;T&gt;</code>",id:"clonearrayarray--arrayt",children:[]},{value:"makeDistortionCurve(amount) \u21d2 <code>Float32Array</code>",id:"makedistortioncurveamount--float32array",children:[]}],k={toc:p};function m(t){var e=t.components,n=(0,l.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("dl",null,(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#AudioEngine"},"AudioEngine")," \u21d0 ",(0,r.kt)("code",null,"ParentClass")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Classname")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#SoundPlayer"},"SoundPlayer")," \u21d0 ",(0,r.kt)("code",null,"ParentClass")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Classname"))),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("dl",null,(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#A4"},"A4")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"The Global ",(0,r.kt)("a",{href:"https://en.wikipedia.org/wiki/Concert_pitch"},"concert tuning pitch")," which is used to generate all the other pitch values from notes. A4's values in number."))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("dl",null,(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#buildImpulse"},"buildImpulse(options)")," \u21d2 ",(0,r.kt)("code",null,"AudioBuffer")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Utility function for building an impulse response from the options parameters."),(0,r.kt)("p",null,"Based on https://github.com/web-audio-components/simple-reverb _buildImpulse for reverb method")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#secondsToMilliseconds"},"secondsToMilliseconds(seconds)")," \u21d2 ",(0,r.kt)("code",null,"number")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert seconds to milliseconds.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#millisecondsToSeconds"},"millisecondsToSeconds(milliseconds)")," \u21d2 ",(0,r.kt)("code",null,"number")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert milliseconds to seconds.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#equalPowerScale"},"equalPowerScale(percent)")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Equal power gain scale. Good for cross-fading.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#dbToGain"},"dbToGain()")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert decibels into gain.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#gainToDb"},"gainToDb()")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert gain to decibels.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#intervalToFrequencyRatio"},"intervalToFrequencyRatio(interval)")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert an interval (in semitones) to a frequency ratio.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#frequencyToMidiNote"},"frequencyToMidiNote(frequency)")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert a frequency value to a MIDI note.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#frequencyToMidiNoteFloat"},"frequencyToMidiNoteFloat()")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert a frequency to a floating point midi value")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#midiToFrequency"},"midiToFrequency(midi)")," \u21d2"),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Convert a MIDI note to frequency value.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#clamp"},"clamp(value, min, max)")," \u21d2"),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Returns a number whose value is limited to the given range."),(0,r.kt)("p",null,"Example: limit the output of this computation to between 0 and 255 (x * 255).clamp(0, 255)")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#exchange"},"exchange(array, iIndex, jIndex)")," \u21d2 ",(0,r.kt)("code",null,"Array.<T>")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Switch two items in an array.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#cloneArray"},"cloneArray(array)")," \u21d2 ",(0,r.kt)("code",null,"Array.<T>")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"Clone an array.")),(0,r.kt)("dt",null,(0,r.kt)("a",{href:"#makeDistortionCurve"},"makeDistortionCurve(amount)")," \u21d2 ",(0,r.kt)("code",null,"Float32Array")),(0,r.kt)("dd",null,(0,r.kt)("p",null,"I am not sure what I am doing."))),(0,r.kt)("a",{name:"AudioEngine"}),(0,r.kt)("h2",{id:"audioengine--parentclass"},"AudioEngine \u21d0 ",(0,r.kt)("code",null,"ParentClass")),(0,r.kt)("p",null,"Classname"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"ParentClass"),", ",(0,r.kt)("code",null,"parent"),"  "),(0,r.kt)("a",{name:"new_AudioEngine_new"}),(0,r.kt)("h3",{id:"new-audioengine"},"new AudioEngine()"),(0,r.kt)("p",null,"Summary. (A channel to handle single/multiple effects)"),(0,r.kt)("p",null,"Description. (A channel to handle single/multiple effects)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"ChannelStrip")," - ",(0,r.kt)("p",null,"Return value description."),"  "),(0,r.kt)("a",{name:"SoundPlayer"}),(0,r.kt)("h2",{id:"soundplayer--parentclass"},"SoundPlayer \u21d0 ",(0,r.kt)("code",null,"ParentClass")),(0,r.kt)("p",null,"Classname"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"ParentClass"),", ",(0,r.kt)("code",null,"parent"),"  "),(0,r.kt)("a",{name:"new_SoundPlayer_new"}),(0,r.kt)("h3",{id:"new-soundplayer"},"new SoundPlayer()"),(0,r.kt)("p",null,"Summary. (A channel to handle single/multiple effects)"),(0,r.kt)("p",null,"Description. (A channel to handle single/multiple effects)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"ChannelStrip")," - ",(0,r.kt)("p",null,"Return value description."),"  "),(0,r.kt)("a",{name:"A4"}),(0,r.kt)("h2",{id:"a4"},"A4"),(0,r.kt)("p",null,"The Global ",(0,r.kt)("a",{href:"https://en.wikipedia.org/wiki/Concert_pitch"},"concert tuning pitch")," which is used to generate all the other pitch values from notes. A4's values in number."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global variable  "),(0,r.kt)("a",{name:"buildImpulse"}),(0,r.kt)("h2",{id:"buildimpulseoptions--audiobuffer"},"buildImpulse(options) \u21d2 ",(0,r.kt)("code",null,"AudioBuffer")),(0,r.kt)("p",null,"Utility function for building an impulse response from the options parameters."),(0,r.kt)("p",null,"Based on https://github.com/web-audio-components/simple-reverb _buildImpulse for reverb method"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"AudioBuffer")," - ",(0,r.kt)("p",null,"Rutrn an audio buffer."),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ReverbOptions")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The reverb options that will be used to generate the impulse."))))),(0,r.kt)("a",{name:"secondsToMilliseconds"}),(0,r.kt)("h2",{id:"secondstomillisecondsseconds--number"},"secondsToMilliseconds(seconds) \u21d2 ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"Convert seconds to milliseconds."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"number")," - ",(0,r.kt)("p",null,"Return the number of milliseconds"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"seconds"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Number of seconds."))))),(0,r.kt)("a",{name:"millisecondsToSeconds"}),(0,r.kt)("h2",{id:"millisecondstosecondsmilliseconds--number"},"millisecondsToSeconds(milliseconds) \u21d2 ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"Convert milliseconds to seconds."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"number")," - ",(0,r.kt)("p",null,"Return the number of seconds"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": Function/class relied on  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"milliseconds"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Number of milliseconds."))))),(0,r.kt)("a",{name:"equalPowerScale"}),(0,r.kt)("h2",{id:"equalpowerscalepercent"},"equalPowerScale(percent)"),(0,r.kt)("p",null,"Equal power gain scale. Good for cross-fading."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"percent"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"(0-1)"))))),(0,r.kt)("a",{name:"dbToGain"}),(0,r.kt)("h2",{id:"dbtogain"},"dbToGain()"),(0,r.kt)("p",null,"Convert decibels into gain."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("a",{name:"gainToDb"}),(0,r.kt)("h2",{id:"gaintodb"},"gainToDb()"),(0,r.kt)("p",null,"Convert gain to decibels."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("a",{name:"intervalToFrequencyRatio"}),(0,r.kt)("h2",{id:"intervaltofrequencyratiointerval"},"intervalToFrequencyRatio(interval)"),(0,r.kt)("p",null,"Convert an interval (in semitones) to a frequency ratio."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interval"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"the number of semitones above the base note"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Tone.intervalToFrequencyRatio(0); // 1\nTone.intervalToFrequencyRatio(12); // 2\nTone.intervalToFrequencyRatio(-12); // 0.5\n")),(0,r.kt)("a",{name:"frequencyToMidiNote"}),(0,r.kt)("h2",{id:"frequencytomidinotefrequency"},"frequencyToMidiNote(frequency)"),(0,r.kt)("p",null,"Convert a frequency value to a MIDI note."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"frequency"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The value to frequency value to convert."))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Tone.ftom(440); // returns 69\n")),(0,r.kt)("a",{name:"frequencyToMidiNoteFloat"}),(0,r.kt)("h2",{id:"frequencytomidinotefloat"},"frequencyToMidiNoteFloat()"),(0,r.kt)("p",null,"Convert a frequency to a floating point midi value"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function  "),(0,r.kt)("a",{name:"midiToFrequency"}),(0,r.kt)("h2",{id:"miditofrequencymidi-"},"midiToFrequency(midi) \u21d2"),(0,r.kt)("p",null,"Convert a MIDI note to frequency value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("p",null,"The corresponding frequency value"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"midi"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The midi number to convert."))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Tone.mtof(69); // 440\n")),(0,r.kt)("a",{name:"clamp"}),(0,r.kt)("h2",{id:"clampvalue-min-max-"},"clamp(value, min, max) \u21d2"),(0,r.kt)("p",null,"Returns a number whose value is limited to the given range."),(0,r.kt)("p",null,"Example: limit the output of this computation to between 0 and 255 (x * 255).clamp(0, 255)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("p",null,"A number in the range ","[min, max]"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The number to clamp"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"min"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The lower boundary of the output range"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"The upper boundary of the output range"))))),(0,r.kt)("a",{name:"exchange"}),(0,r.kt)("h2",{id:"exchangearray-iindex-jindex--arrayt"},"exchange(array, iIndex, jIndex) \u21d2 ",(0,r.kt)("code",null,"Array.","<","T",">")),(0,r.kt)("p",null,"Switch two items in an array."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Array.","<","T",">")," - ",(0,r.kt)("p",null,"Return a new array"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","T",">")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Array to switch items from."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"iIndex"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"First item to switch position."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jIndex"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Second item to switch position."))))),(0,r.kt)("a",{name:"cloneArray"}),(0,r.kt)("h2",{id:"clonearrayarray--arrayt"},"cloneArray(array) \u21d2 ",(0,r.kt)("code",null,"Array.","<","T",">")),(0,r.kt)("p",null,"Clone an array."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Array.","<","T",">")," - ",(0,r.kt)("p",null,"Return a new array"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": Function/class relied on  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","T",">")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Array to clone."))))),(0,r.kt)("a",{name:"makeDistortionCurve"}),(0,r.kt)("h2",{id:"makedistortioncurveamount--float32array"},"makeDistortionCurve(amount) \u21d2 ",(0,r.kt)("code",null,"Float32Array")),(0,r.kt)("p",null,"I am not sure what I am doing."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Float32Array")," - ",(0,r.kt)("p",null,"Return a float32 array containing curve data."),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,"Distortion curve sharpening coef."))))))}m.isMDXComponent=!0}}]);